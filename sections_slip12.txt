================================================= Slip 12========================================================================
Write a Java Program to implement Decorator Pattern for interface Car to define the
assemble() method and then decorate it to Sports car and Luxury Car
Write a python program to make Categorical values in numeric format for a given
dataset
Create a Simple Web Server using node js.
--------------------------------------------------------------------------------------------------------------
Car.java
package com.journaldev.design.decorator;
public interface Car {
	public void assemble();
}
BasicCar.java
package com.journaldev.design.decorator;
public class BasicCar implements Car {
	@Override
	public void assemble() {
		System.out.print("Basic Car.");
	}
}
CarDecorator.java
package com.journaldev.design.decorator;
public class CarDecorator implements Car {
	protected Car car;
	public CarDecorator(Car c){
		this.car=c;
	}
	
	@Override
	public void assemble() {
		this.car.assemble();
	}
}
SportsCar.java
package com.journaldev.design.decorator;
public class SportsCar extends CarDecorator {
	public SportsCar(Car c) {
		super(c);
	}
	@Override
	public void assemble(){
		super.assemble();
		System.out.print(" Adding features of Sports Car.");
	}
}
LuxuryCar.java
package com.journaldev.design.decorator;
public class LuxuryCar extends CarDecorator {

	public LuxuryCar(Car c) {
		super(c);
	}
	@Override
	public void assemble(){
		super.assemble();
		System.out.print(" Adding features of Luxury Car.");
	}
}
package com.journaldev.design.test;
import com.journaldev.design.decorator.BasicCar;
import com.journaldev.design.decorator.Car;
import com.journaldev.design.decorator.LuxuryCar;
import com.journaldev.design.decorator.SportsCar;
DecoratorPatternTest.java
public class DecoratorPatternTest {

	public static void main(String[] args) {
		Car sportsCar = new SportsCar(new BasicCar());
		sportsCar.assemble();
		System.out.println("\n*****");
		
		Car sportsLuxuryCar = new SportsCar(new LuxuryCar(new BasicCar()));
		sportsLuxuryCar.assemble();
	}

}
---------------------------------------------------------------------------------------------------------
import pandas as pd
import numpy as np
from sklearn.preprocessing import LabelEncoder
from sklearn.preprocessing import OneHotEncoder

data=pd.read_csv("ass3.csv")
print(data)
x=data.iloc[:,0:1].values
print(x)

le=LabelEncoder()
x1=le.fit_transform(x)
print(x1)

oe=OneHotEncoder()
x2=oe.fit_transform(x).toarray()
print(x2)

-------------------------------------------------------------------------------------------------------------------
const express = require('express');
const app = express();
const port = 3000;

// Define a route
app.get('/', (req, res) => {
    res.send('Hello World!');
});

// Start the server
app.listen(port, () => {
    console.log(`Server is running on http://localhost:${port}`);
});


